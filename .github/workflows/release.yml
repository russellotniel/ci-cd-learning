name: Release to Production

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    if: |
      !startsWith(github.event.head_commit.message, 'chore(release)') &&
      !startsWith(github.event.head_commit.message, 'merge:')
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: "22"

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      
      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          npx semantic-release
          
          # Get the new version
          VERSION=v$(node -p "require('./package.json').version")
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Released version: ${VERSION}"
      
      - name: Push to dev branch
        run: |
          git push origin HEAD:dev --force
          echo "âœ… Pushed release commit to dev branch"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push production image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            russellotniel/personal-repository:${{ steps.release.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max