name: Release to Production

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    # Skip if commit message starts with "chore(release)" or "merge:"
    if: |
      !startsWith(github.event.head_commit.message, 'chore(release)') &&
      !startsWith(github.event.head_commit.message, 'merge:')
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - uses: actions/setup-node@v4
        with: 
          node-version: "22"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Generate Release Version
        id: version
        run: |
          # Run standard-version to bump version and update CHANGELOG
          npm run release
          
          # Extract the new version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=v${VERSION}" >> $GITHUB_OUTPUT
          echo "Released version: v${VERSION}"
      
      - name: Push changes
        run: |
          git push origin main --follow-tags
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push production image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            russellotniel/personal-repository:${{ steps.version.outputs.VERSION }}
            russellotniel/personal-repository:latest
            russellotniel/personal-repository:stable
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          body_path: CHANGELOG.md
          generate_release_notes: true
          token: ${{ secrets.RELEASE_TOKEN }}
  
  # NEW: Auto-sync back to dev
  sync-dev:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Sync main to dev
        run: |
          git fetch origin main
          git merge origin/main -m "merge: sync release from main [skip ci]" --no-ff
          git push origin dev || echo "No changes to push"